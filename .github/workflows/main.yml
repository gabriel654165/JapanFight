name: Build Project

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  buildOnMultiplePlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows
          - StandaloneWindows64
          - StandaloneLinux64
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      
      - name: Get tag name from ref
        shell: bash
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
        id: get_tag
      - name: Create tag in public repository
        run: |
          cd ${{github.workspace}}/JapanFight
          git tag ${{ steps.get_tag.outputs.tag }}
          git push --tags --porcelain
     
      - name: Chaching Library
        uses: actions/cache@v3
        with:
          path: Library/
          key: Library-JapanFight-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-JapanFight-
            Library-

      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

        #Try to zip the artifact

      - name: Zip artifact
        run: zip build-${{ matrix.targetPlatform }}.zip /home/runner/work/JapanFight/JapanFight/build/${{ matrix.targetPlatform }}/* -r

        # Should we download the build ?
        # To access to the zip in github/workflows or docker
      
      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          tag_name: ${{ matrix.targetPlatform }}-${{ steps.get_tag.outputs.tag }}
          release_name: Release-${{ matrix.targetPlatform }}-${{ steps.get_tag.outputs.tag }}
          commitish: main
          #body_path: CHANGELOG.md # optional body (description)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-${{ matrix.targetPlatform }}.zip
          asset_name: build-${{ matrix.targetPlatform }}.zip
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ github.token }}
      
      
      # Download build
      # - uses: actions/download-artifact@v3
      #   with:
      #     name: Build-${{ matrix.targetPlatform }}
      #     path: build/${{ matrix.targetPlatform }}
      
      
      # Push artifacts
      # - uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     commit_message: 'feat: new builds'
      #     branch: test
      #     commit_options: '--no-verify --signoff'
      #     commit_author: Author <actions@github.com>
      #     status_options: '--untracked-files=no'
      #     skip_dirty_check: false


